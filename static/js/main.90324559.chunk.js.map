{"version":3,"sources":["types/index.js","actions/AlertaActions.js","config/axios.js","config/token.js","actions/AuthActions.js","components/auth/Login.js","components/auth/NuevaCuenta.js","actions/ProyectosActions.js","actions/TareasActions.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/proyectos/NuevoProyecto.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","components/routes/RutaPrivada.js","components/routes/RutaPublica.js","Reducers/AlertasReducer.js","Reducers/AuthReducer.js","Reducers/ProyectosReducer.js","Reducers/TareasReducer.js","Reducers/index.js","store/store.js","App.js","index.js"],"names":["FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","mostrarAlerta","msg","categoria","dispatch","a","mostartAlertaAction","setTimeout","ocultarAlertaAction","type","payload","clienteAxios","axios","create","baseURL","process","tokenAuth","token","defaults","headers","common","resgistroExitoso","resp","resgistroError","alerta","usuarioAutenticado","localStorage","getItem","get","obtenerUsuario","data","usuario","console","log","response","loginError","loginExitoso","Login","history","useDispatch","useSelector","state","auth","mensaje","autenticado","useEffect","push","useState","email","password","guardarUsuario","onChange","e","target","name","value","className","onSubmit","datos","preventDefault","trim","post","htmlFor","id","placeholder","to","NuevaCuenta","nombre","confirmar","length","ObtenerProyectos","ObtenerProyectosAction","proyectos","proyectoError","agregarProyectoAction","proyecto","EliminarProyectoAction","obtenerTareas","params","obtenerTareasAction","tareas","proyectoId","agregarTareaAction","tarea","eliminarTareaAction","ActualizarTarea","put","_id","ActualizarTareaAction","Proyecto","seleccionarProyecto","onClick","ListadoProyectos","map","NuevoProyecto","formulario","errorFormulario","guardarProyecto","agregarProyecto","Sidebar","Barra","cerrarSesion","FormTarea","errorTarea","tareaSeleccionada","guardarTarea","proyectoActual","agregarTarea","Tarea","onclickEliminar","delete","eliminarTarea","CambiarEstado","estado","guardarTareaActual","ListadoTareas","tareasProyecto","Proyectos","RutaPrivada","Component","component","props","render","RutaPublica","initialState","cargando","reducers","combineReducers","action","filter","setItem","removeItem","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","basename","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.90324559.chunk.js","sourcesContent":["export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO'\r\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS'\r\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\r\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\r\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\r\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\r\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\r\n\r\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\r\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\r\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\r\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\r\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\r\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\r\n \r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\r\n\r\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const CERRAR_SESION = 'CERRAR_SESION';","import { MOSTRAR_ALERTA , OCULTAR_ALERTA} from '../types/index'\r\n\r\nexport const mostrarAlerta=(msg,categoria)=>{\r\n    return async (dispatch)=>{\r\n        dispatch(mostartAlertaAction(msg,categoria));\r\n\r\n        setTimeout(()=>{\r\n            dispatch(ocultarAlertaAction())\r\n        },2000)}\r\n}\r\n\r\nexport const mostartAlertaAction=(msg,categoria)=>({\r\n    type:MOSTRAR_ALERTA,\r\n    payload:{\r\n        msg,\r\n        categoria\r\n    }})\r\n\r\nexport const ocultarAlertaAction=()=>({\r\n    type:OCULTAR_ALERTA\r\n})","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL : process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default clienteAxios;","import clienteAxios from './axios';\r\n\r\nconst tokenAuth = token => {\r\n    if(token) {\r\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import clienteAxios from '../config/axios';\r\nimport tokenAuth from '../config/token';\r\n\r\nimport { REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION,} from '../types/index';\r\n\r\nexport const registrarUsuario=(datos)=>{\r\n    return async (dispatch)=>{\r\n        try {\r\n\r\n            const resp = await clienteAxios.post('/api/usuarios',datos);\r\n            \r\n            dispatch(resgistroExitoso(resp.data))\r\n            usuarioAutenticado()\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria:'alerta-error'\r\n            }\r\n            dispatch(resgistroError(alerta))\r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport const resgistroExitoso=(resp)=>({\r\n    type:REGISTRO_EXITOSO,\r\n    payload:resp\r\n})\r\nexport const resgistroError=(alerta)=>({\r\n    type:REGISTRO_ERROR,\r\n    payload:alerta\r\n})\r\n\r\n\r\nexport const usuarioAutenticado=()=>{\r\n    return async(dispatch)=>{\r\n\r\n        const token = localStorage.getItem('token');\r\n\r\n        if(token){\r\n            tokenAuth(token)\r\n        }\r\n\r\n        try {\r\n            const resp = await clienteAxios.get('/api/auth');\r\n            dispatch( obtenerUsuario(resp.data.usuario) ) \r\n            \r\n        } catch (error) {\r\n         \r\n            console.log(error.response)\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginError=(alerta)=>({\r\n    type:LOGIN_ERROR,\r\n    payload: alerta\r\n})\r\n\r\nexport const obtenerUsuario=(resp)=>({\r\n    type:OBTENER_USUARIO,\r\n    payload:resp\r\n})\r\n\r\n\r\nexport const iniciarSesion=(datos)=>{\r\n    return async (dispatch)=>{\r\n        try {\r\n            const resp = await clienteAxios.post('/api/auth',datos);\r\n            dispatch(loginExitoso(resp.data ))  \r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria:'alerta-error'\r\n            }\r\n            dispatch( loginError(alerta))\r\n            console.log(error.response)\r\n        }\r\n    }   \r\n}\r\n\r\nexport const loginExitoso=(resp)=>({\r\n    type:LOGIN_EXITOSO,\r\n    payload: resp\r\n})\r\n\r\nexport const cerrarSesionAction=()=>({\r\n    type:CERRAR_SESION\r\n})","import React, {  useEffect, useState } from 'react'\r\nimport { useDispatch ,useSelector} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { mostrarAlerta } from '../../actions/AlertaActions';\r\nimport { iniciarSesion } from '../../actions/AuthActions';\r\n\r\nconst Login = ({history}) => {\r\n    const dispatch = useDispatch()\r\n    const {alerta} = useSelector(state => state.alerta);\r\n    const {mensaje,autenticado} = useSelector(state => state.auth);\r\n\r\n      // En caso de que el password o usuario no exista\r\n      useEffect(() => {\r\n        if(autenticado) {\r\n            history.push('/proyectos');\r\n        }\r\n\r\n        if(mensaje) {\r\n            dispatch(mostrarAlerta(mensaje.msg, mensaje.categoria));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, autenticado, history]);\r\n    // State para iniciar sesión\r\n    const [usuario, guardarUsuario] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    // extraer de usuario\r\n    const { email, password } = usuario;\r\n\r\n\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit=(e)=>{\r\n        e.preventDefault()\r\n        // Validar que no haya campos vacios\r\n        if(email.trim() === '' || password.trim() === '') {\r\n            dispatch(mostrarAlerta('Todos los campos son obligatorios', 'alerta-error'));\r\n            return;\r\n        }\r\n        //iniciar sesion\r\n        dispatch( iniciarSesion({email,password}) )\r\n        //dispatch( usuarioAutenticado() )\r\n    }\r\n    return (\r\n        <div className=\"form-usuario\">\r\n        { alerta ? ( <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div> )  : null }\r\n\r\n        <div className=\"contenedor-form sombra-dark\">\r\n            <h1>Iniciar Sesión</h1>\r\n\r\n            <form\r\n                onSubmit={onSubmit}\r\n            >\r\n                <div className=\"campo-form\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input \r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Tu Email\"\r\n                        value={email}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo-form\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input \r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Tu Password\"\r\n                        value={password}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo-form\">\r\n                    <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Iniciar Sesión\" />\r\n                </div>\r\n            </form>\r\n\r\n            <Link to={'/nueva-cuenta'} className=\"enlace-cuenta\">\r\n                Obtener Cuenta\r\n            </Link>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { mostrarAlerta } from '../../actions/AlertaActions';\r\nimport { registrarUsuario } from '../../actions/AuthActions';\r\n\r\n\r\nconst NuevaCuenta = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {alerta} = useSelector(state => state.alerta)\r\n    const {mensaje ,autenticado} = useSelector(state => state.auth)\r\n    // En caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\r\n    useEffect(() => {\r\n        if(autenticado) {\r\n            history.push('/proyectos');\r\n        }\r\n\r\n        if(mensaje) {\r\n            dispatch(mostrarAlerta(mensaje.msg, mensaje.categoria))\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, autenticado, history]);\r\n    // State para iniciar sesión\r\n    const [usuario, guardarUsuario] = useState({\r\n        nombre: '',\r\n        email: '',\r\n        password: '',\r\n        confirmar: ''\r\n    });\r\n\r\n    // extraer de usuario\r\n    const { nombre, email, password, confirmar } = usuario;\r\n\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    };\r\n\r\n    // Cuando el usuario quiere iniciar sesión\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n      // Validar que no haya campos vacios\r\n      if( nombre.trim() === '' || \r\n      email.trim() === '' || \r\n      password.trim() === '' || \r\n      confirmar.trim() === '' ) {\r\n           dispatch( mostrarAlerta('Todos los campos son obligatorios', 'alerta-error'));\r\n          return;\r\n      };\r\n      // Password minimo de 6 caracteres\r\n      if(password.length < 6) {\r\n        dispatch(mostrarAlerta('El password debe ser de al menos 6 caracteres', 'alerta-error'));\r\n        return;\r\n    }\r\n\r\n    // Los 2 passwords son iguales\r\n    if(password !== confirmar) {\r\n        dispatch(mostrarAlerta('Los passwords no son iguales', 'alerta-error'));\r\n        return;\r\n    }\r\n    \r\n    //pasarlo al action\r\n    dispatch( registrarUsuario({\r\n        nombre,\r\n        email,\r\n        password\r\n    }) )\r\n      \r\n   \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"form-usuario\">\r\n            { alerta ? ( <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div> )  : null }\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Obtener una cuenta</h1>\r\n\r\n                <form\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"nombre\">Nombre</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            id=\"nombre\"\r\n                            name=\"nombre\"\r\n                            placeholder=\"Tu Nombre\"\r\n                            value={nombre}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Tu Email\"\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Tu Password\"\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"confirmar\">Confirmar Password</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            id=\"confirmar\"\r\n                            name=\"confirmar\"\r\n                            placeholder=\"Repite tu Password\"\r\n                            value={confirmar}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Registrarme\" />\r\n                    </div>\r\n                </form>\r\n\r\n                <Link to={'/'} className=\"enlace-cuenta\">\r\n                    Volver a Iniciar Sesión\r\n                </Link>\r\n            </div>\r\n        </div>\r\n     \r\n    )\r\n}\r\n\r\nexport default NuevaCuenta\r\n","import clienteAxios from '../config/axios'\r\nimport {FORMULARIO_PROYECTO,\r\n    OBTENER_PROYECTOS,\r\n    AGREGAR_PROYECTO,\r\n    VALIDAR_FORMULARIO,\r\n    PROYECTO_ACTUAL,\r\n    ELIMINAR_PROYECTO,\r\n    PROYECTO_ERROR,} from '../types'\r\n\r\n\r\nexport const mostrarFormulario=()=>({\r\n    type:FORMULARIO_PROYECTO\r\n})\r\n\r\n\r\nexport const ObtenerProyectos=()=>{\r\n    return async (dispatch)=>{\r\n        try {\r\n            const resp = await clienteAxios.get('/api/proyectos')\r\n            dispatch( ObtenerProyectosAction(resp.data.proyectos) )\r\n        } catch (error) {\r\n            console.log(error.response)\r\n            const alerta ={\r\n                msg: error.response.data.msg,\r\n                categoria:'alerta-error'\r\n            };\r\n            dispatch( proyectoError(alerta) )\r\n        }\r\n    }\r\n}\r\n\r\nexport const ObtenerProyectosAction=(proyectos)=>({\r\n    type:OBTENER_PROYECTOS,\r\n    payload:proyectos\r\n})\r\n\r\n\r\n\r\n\r\nexport const agregarProyecto=(proyecto)=>{\r\n    return async(dispatch)=>{\r\n       try {\r\n        const resp = await clienteAxios.post('/api/proyectos',proyecto)\r\n        dispatch( agregarProyectoAction(resp.data) )\r\n       } catch (error) {\r\n           console.log(error.response)\r\n           const alerta ={\r\n            msg: error.response.data,\r\n            categoria:'alerta-error'\r\n            };\r\n            dispatch( proyectoError(alerta) )\r\n       }\r\n    }\r\n   \r\n}\r\n\r\nexport const agregarProyectoAction=(proyecto)=>({\r\n    type:AGREGAR_PROYECTO, \r\n    payload:proyecto\r\n})\r\nexport const mostrarError=()=>({\r\n    type:VALIDAR_FORMULARIO\r\n})\r\n\r\nexport const ProyectoActual=(proyectoId)=>({\r\n    type:PROYECTO_ACTUAL,\r\n    payload:proyectoId\r\n})\r\n\r\nexport const EliminarProyecto=(id)=>{\r\n    return async(dispatch)=>{\r\n\r\n        try {\r\n            await clienteAxios.delete(`/api/proyectos/${id}`)\r\n            dispatch(EliminarProyectoAction(id))\r\n        } catch (error) {\r\n            const alerta ={\r\n                msg: error.response.data,\r\n                categoria:'alerta-error'\r\n            };\r\n            dispatch( proyectoError(alerta) )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const EliminarProyectoAction=(id)=>({\r\n    type:ELIMINAR_PROYECTO,\r\n    payload: id\r\n})\r\n\r\nexport const proyectoError=(alerta)=>({\r\n    type:PROYECTO_ERROR,\r\n    payload:alerta\r\n})\r\n","\r\nimport clienteAxios from '../config/axios'\r\nimport {TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA,} from '../types/index'\r\n\r\nexport const obtenerTareas=(proyecto)=>{\r\n    return async(dispatch)=>{\r\n        const resp = await clienteAxios.get('/api/tareas',{params:{proyecto}})\r\n        dispatch(obtenerTareasAction(resp.data.tareas) )\r\n    }\r\n}\r\n\r\nexport const obtenerTareasAction=(proyectoId)=>({\r\n    type:TAREAS_PROYECTO,\r\n    payload:proyectoId\r\n})\r\n\r\nexport const agregarTarea=(tarea)=>{\r\n    return async (dispatch)=>{\r\n        try {\r\n            const resp = await clienteAxios.post('/api/tareas',tarea)\r\n            dispatch( agregarTareaAction(resp.data.tarea) )\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport const agregarTareaAction=(tarea)=>({\r\n    type:AGREGAR_TAREA,\r\n    payload: tarea\r\n    })\r\n\r\nexport const validarTarea=()=>({\r\n    type:VALIDAR_TAREA\r\n})\r\n\r\nexport const eliminarTarea=(id,proyecto)=>{\r\n    return async(dispatch)=>{\r\n        await clienteAxios.delete(`/api/tareas/${id}`,{params:{proyecto}})\r\n        dispatch(eliminarTareaAction(id))\r\n    }\r\n}\r\n\r\nexport const eliminarTareaAction=(id)=>({\r\n    type:ELIMINAR_TAREA,\r\n    payload:id\r\n})\r\n\r\nexport const ActualizarTarea=(tarea)=>{\r\n    return  async(dispatch)=>{\r\n        try {\r\n            const resp = await clienteAxios.put(`/api/tareas/${tarea._id}`,tarea)\r\n            dispatch(ActualizarTareaAction(resp.data.tarea))\r\n        } catch (error) {\r\n            console.log(error.response)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const ActualizarTareaAction=(tarea)=>({\r\n    type:ACTUALIZAR_TAREA,\r\n    payload:tarea\r\n})\r\n\r\nexport const guardarTareaActual=(tarea)=>({\r\n    type:TAREA_ACTUAL,\r\n    payload:tarea\r\n})\r\nexport const limpiarTarea=()=>({\r\n    type:LIMPIAR_TAREA\r\n})","import React  from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {  ProyectoActual } from '../../actions/ProyectosActions';\r\nimport { obtenerTareas } from '../../actions/TareasActions';\r\n\r\n\r\nconst Proyecto = ({proyecto}) => {\r\n    const dispatch = useDispatch()\r\n    \r\n    const seleccionarProyecto = id =>{\r\n      \r\n        dispatch( ProyectoActual(id) );       \r\n        dispatch( obtenerTareas(id) );\r\n\r\n    }\r\n\r\n    return ( \r\n        <li className='animate__animated animate__fadeIn animate__faster' >\r\n            <button \r\n                className='btn btn-blank'\r\n                type='button'\r\n                onClick={ ()=> seleccionarProyecto(proyecto._id) }\r\n            >{proyecto.nombre}</button>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Proyecto;\r\n ","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { mostrarAlerta } from '../../actions/AlertaActions'\r\nimport { ObtenerProyectos } from '../../actions/ProyectosActions'\r\nimport Proyecto from './Proyecto'\r\n\r\nconst ListadoProyectos = () => {\r\n    const dispatch = useDispatch()\r\n    const {proyectos, mensaje} = useSelector(state => state.proyectos)\r\n    const {alerta} = useSelector(state => state.alerta)\r\n    const {autenticado} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        // si hay un error\r\n        if(mensaje) {\r\n           dispatch( mostrarAlerta(mensaje.msg, mensaje.categoria));\r\n        } \r\n       \r\n       if(autenticado){\r\n        dispatch( ObtenerProyectos() );\r\n       }\r\n       // eslint-disable-next-line\r\n    }, [ObtenerProyectos,mensaje])\r\n    \r\n    //revisar si poryectos tiene contenido\r\n    if(proyectos.length ===0) return <p>No hay Proyectos, comienza creando uno.</p>\r\n    return (\r\n        <ul className='listado-proyectos animate__animated animate__fadeIn animate__faster'>\r\n            { alerta   ? ( <div className={`alerta ${alerta.categoria} `}>{alerta.msg}</div>  ) : null  }\r\n            {proyectos.map( proyecto=>( \r\n                \r\n                <Proyecto\r\n                    key={proyecto._id}\r\n                    proyecto={proyecto}\r\n                />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ListadoProyectos\r\n","import React ,{ useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { agregarProyecto, mostrarError, mostrarFormulario } from '../../actions/ProyectosActions';\r\n\r\n\r\nconst NuevoProyecto = () => {\r\n    //Redux\r\n    const {formulario , errorFormulario } = useSelector(state => state.proyectos);\r\n    const dispatch = useDispatch();\r\n    \r\n    // State para Proyecto\r\n    const [proyecto, guardarProyecto] = useState({\r\n        nombre: ''\r\n    });\r\n\r\n    // Extraer nombre de proyecto\r\n    const { nombre } = proyecto;\r\n\r\n    // Lee los contenidos del input\r\n    const onChangeProyecto = e => {\r\n        guardarProyecto({\r\n            ...proyecto,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const onClickFormulario=()=>{\r\n        dispatch( mostrarFormulario() )\r\n    }\r\n\r\n    const onSubmitProyecto=(e)=>{\r\n        e.preventDefault()\r\n         // Validar el proyecto\r\n         if(nombre === '') {\r\n            dispatch( mostrarError() );\r\n            return;\r\n        }\r\n        dispatch( agregarProyecto(proyecto) );\r\n\r\n        // Reiniciar el form\r\n        guardarProyecto({\r\n            nombre: ''\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <button \r\n            type=\"button\"\r\n            className=\"btn btn-block btn-primario\"\r\n            onClick={ onClickFormulario }\r\n        >Nuevo Proyecto</button>\r\n\r\n        { formulario ? \r\n                (\r\n                    <form\r\n                        className=\"formulario-nuevo-proyecto\"\r\n                        onSubmit={onSubmitProyecto}\r\n                    >\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"input-text\"\r\n                            placeholder=\"Nombre Proyecto\"\r\n                            name=\"nombre\"\r\n                            value={nombre}\r\n                            onChange={onChangeProyecto}\r\n                        />\r\n\r\n                        <input \r\n                            type=\"submit\"\r\n                            className=\"btn btn-primario btn-block\"\r\n                            value=\"Agregar Proyecto\"\r\n                        />\r\n\r\n                    </form>\r\n            ) : null } \r\n\r\n        { errorFormulario ? <p className=\"mensaje error\">El nombre del Proyecto es obligatorio</p>  : null } \r\n    </>\r\n    )\r\n}\r\n\r\nexport default NuevoProyecto\r\n","import React from 'react';\r\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\r\nimport NuevoProyecto from '../proyectos/NuevoProyecto';\r\n\r\nconst Sidebar = () => {\r\n    return ( \r\n        <aside>\r\n            <h1>MERN<span>Tasks</span></h1>\r\n\r\n            <NuevoProyecto />\r\n\r\n            <div className=\"proyectos\">\r\n                <h2>Tus Proyectos</h2>\r\n                <ListadoProyectos />\r\n            </div>\r\n        </aside>\r\n     );\r\n}\r\n \r\nexport default Sidebar;","import React from 'react';\r\nimport { cerrarSesionAction} from '../../actions/AuthActions'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst Barra = () => {\r\n    const {usuario} = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const cerrarSesion=()=>{\r\n        dispatch( cerrarSesionAction() )\r\n    }\r\n    return (\r\n        <header className=\"app-header\">\r\n        <p className=\"nombre-usuario\">Hola <span>{ usuario==null ? 'usuario' : usuario.nombre }</span> </p> \r\n        \r\n\r\n        <nav className=\"nav-principal\">\r\n            <button \r\n                className=\"btn btn-blank cerrar-sesion text-white\"\r\n                onClick={() => cerrarSesion() }\r\n            >Cerrar Sesión</button>\r\n        </nav>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Barra\r\n","import React, { useEffect, useState } from 'react';  \r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ActualizarTarea, agregarTarea, limpiarTarea, obtenerTareas, validarTarea } from '../../actions/TareasActions';\r\n\r\n\r\nconst FormTarea = () => {\r\n    const dispatch = useDispatch()\r\n    \r\n    const {proyecto} = useSelector(state => state.proyectos)\r\n    const {errorTarea,tareaSeleccionada} = useSelector(state => state.tareas)\r\n    //console.log(tareaSeleccionada)\r\n\r\n     // Effect que detecta si hay una tarea seleccionada\r\n     useEffect(() => {\r\n        if(tareaSeleccionada !== null) {\r\n            guardarTarea(tareaSeleccionada)\r\n        } else {\r\n            guardarTarea({\r\n                nombre: ''\r\n            })\r\n        }\r\n    }, [ tareaSeleccionada]); \r\n\r\n    // State del formulario\r\n    const [tarea, guardarTarea] = useState({\r\n        nombre: ''\r\n    })\r\n\r\n    // Si no hay proyecto seleccionado\r\n    if(!proyecto) return null;\r\n    \r\n    const [proyectoActual] = proyecto\r\n\r\n\r\n    // extraer el nombre del proyecto\r\n    const { nombre } = tarea;\r\n\r\n    // Si no hay proyecto seleccionado\r\n\r\n     // Leer los valores del formulario\r\n     const handleChange = e => {\r\n        guardarTarea({\r\n            ...tarea,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        // validar\r\n        if(nombre.trim() === '' ) {\r\n           dispatch( validarTarea() )\r\n            return;\r\n        }\r\n       \r\n        if(tareaSeleccionada===null){\r\n            tarea.proyecto = proyectoActual._id\r\n            dispatch( agregarTarea(tarea) );\r\n           \r\n        }else{\r\n            dispatch( ActualizarTarea(tarea) )\r\n            dispatch( limpiarTarea() )\r\n        }\r\n        dispatch( obtenerTareas(proyectoActual._id) )\r\n        \r\n        // reiniciar el form\r\n        guardarTarea({\r\n            nombre: ''\r\n        })\r\n    }\r\n\r\n\r\n    return ( \r\n        <div className=\"formulario\">\r\n            <form\r\n                onSubmit={onSubmit}\r\n            >\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Nombre Tarea...\"\r\n                        name=\"nombre\"\r\n                        value={nombre}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-submit btn-block\"\r\n                        value={tareaSeleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\r\n                    />\r\n                </div>\r\n            </form>\r\n\r\n            {errorTarea ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null } \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default FormTarea;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ActualizarTarea, eliminarTarea, guardarTareaActual, obtenerTareas } from '../../actions/TareasActions';\r\n\r\n\r\nconst Tarea = ({tarea}) => {\r\n    const {proyecto} = useSelector(state => state.proyectos)\r\n    const dispatch = useDispatch()\r\n    //Extraer datos del state iniacial\r\n    \r\n   \r\n\r\n    //eliminar la tarea de el proyecto\r\n    const onclickEliminar = id =>{\r\n       dispatch( eliminarTarea(id,proyecto[0]._id) )\r\n       dispatch( obtenerTareas(proyecto[0]._id) )\r\n    }\r\n    //cambia el estado de la tarea\r\n    const CambiarEstado = tarea =>{\r\n        if(tarea.estado) {\r\n            tarea.estado = false;\r\n        } else {\r\n            tarea.estado = true\r\n        }\r\n        dispatch( ActualizarTarea(tarea) )\r\n    }\r\n    //seleccione la tarea actual\r\n    const tareaSeleccionada = tarea =>{\r\n      dispatch( guardarTareaActual(tarea) )\r\n    }\r\n\r\n    return ( \r\n        <li className='tarea sombra animate__animated animate__fadeIn animate__faster'>\r\n            <p>{tarea.nombre}</p>\r\n            <div className='estado' >\r\n                { tarea.estado\r\n                ? \r\n                    (\r\n                        <button \r\n                            className='completo'\r\n                            type='button'\r\n                            onClick={()=> CambiarEstado(tarea) }\r\n                        >Completo</button>\r\n                    )\r\n                : \r\n                    (\r\n                        <button \r\n                            className='incompleto'\r\n                            type='button'\r\n                            onClick={()=> CambiarEstado(tarea) }\r\n                        >Incompleto</button>\r\n                    )\r\n                \r\n                }\r\n            </div>\r\n            <div className='acciones'>\r\n                <button \r\n                    type='button'\r\n                    className='btn btn-primario'\r\n                    onClick={ ()=> tareaSeleccionada(tarea)}\r\n                >Editar</button>\r\n                <button \r\n                    type='button'\r\n                    className='btn btn-secundario'\r\n                    onClick={()=>onclickEliminar(tarea._id) }\r\n                >Eliminar</button>\r\n            </div>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Tarea;","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { EliminarProyecto } from '../../actions/ProyectosActions'\r\nimport Tarea from './Tarea'\r\n\r\nconst ListadoTareas = () => {\r\n\r\n    \r\n    const {proyecto} = useSelector(state => state.proyectos)\r\n    const {tareasProyecto} = useSelector(state => state.tareas)\r\n    const dispatch = useDispatch()\r\n    // Si no hay proyecto seleccionado\r\n    if(!proyecto) return <h2>Selecciona un proyecto</h2>;\r\n    \r\n        \r\n     const [proyectoActual] = proyecto\r\n\r\n    const onClickEliminar=()=>{\r\n        dispatch( EliminarProyecto(proyectoActual._id) )\r\n    }\r\n    return (\r\n        <>\r\n         <h2>Proyecto:{proyectoActual.nombre}</h2>\r\n         <ul \r\n         className='listado-tareas'\r\n         > {tareasProyecto.length === 0 \r\n            ? (<li className=\"tarea\"><p>No hay tareas</p></li>) \r\n            :  tareasProyecto.map(tarea => (\r\n                    <Tarea \r\n                        key={tarea._id}\r\n                        tarea={tarea}\r\n                    />\r\n            ))\r\n        \r\n        }\r\n\r\n        </ul>\r\n        <button     \r\n                type=\"button\"\r\n                className=\"btn btn-eliminar\"\r\n                onClick={onClickEliminar}\r\n        >Eliminar Proyecto &times;</button>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListadoTareas\r\n","import React, {  useEffect } from 'react';\r\nimport Sidebar from '../layout/Sidebar';\r\nimport Barra from '../layout/Barra';\r\nimport FormTarea from '../tareas/FormTarea';\r\nimport ListadoTareas from '../tareas/ListadoTareas';\r\nimport { useDispatch } from 'react-redux';\r\nimport { usuarioAutenticado } from '../../actions/AuthActions';\r\n// import FormTarea from '../tareas/FormTarea';\r\n// import ListadoTareas from '../tareas/ListadoTareas';\r\n\r\n\r\nconst Proyectos = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        dispatch(usuarioAutenticado());\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n    return ( \r\n        <div className=\"contenedor-app\">\r\n            <Sidebar />\r\n\r\n            <div className=\"seccion-principal\">\r\n                <Barra />\r\n\r\n                <main>\r\n                    <FormTarea />\r\n\r\n                    <div className=\"contenedor-tareas\">\r\n                        <ListadoTareas />\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\n\r\nexport default Proyectos;\r\n ","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Route ,Redirect} from 'react-router-dom';\r\nimport { usuarioAutenticado } from '../../actions/AuthActions';\r\nimport tokenAuth from '../../config/token';\r\n\r\n\r\nconst token = localStorage.getItem('token')\r\nif(token){\r\n  tokenAuth(token)\r\n}\r\n\r\n\r\nconst RutaPrivada = ({component:Component ,...props }) => {\r\n    const {autenticado} = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n     useEffect(()=>{\r\n       \r\n        dispatch( usuarioAutenticado() )\r\n     },[dispatch]);\r\n\r\n    return (\r\n      <Route {...props} render={ props=> (!autenticado )\r\n        ? (<Redirect to='/' />) \r\n        : (<Component {...props} />) } />\r\n    )\r\n}\r\n\r\nexport default RutaPrivada\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route ,Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\nconst RutaPublica = ({component:Component ,...props }) => {\r\n    const {autenticado} = useSelector(state => state.auth)\r\n    \r\n    return (\r\n      <Route {...props} render={ props=> ( autenticado )\r\n        ? (<Redirect to='/proyectos' />) \r\n        : (<Component {...props} />) } \r\n        \r\n        />\r\n    )\r\n}\r\n\r\nexport default RutaPublica\r\n","import { MOSTRAR_ALERTA , OCULTAR_ALERTA} from '../types/index'\r\n\r\nconst initialState={\r\n    alerta:null\r\n}\r\n\r\nexport const AlertaReducer =(state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case MOSTRAR_ALERTA:\r\n            return{\r\n                alerta:action.payload\r\n            }\r\n        case OCULTAR_ALERTA:\r\n            return{\r\n                alerta:null\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","import { REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION,} from '../types/index';\r\n\r\nconst initialState={\r\n    token: localStorage.getItem('token'),\r\n    autenticado:null,\r\n    usuario:null,\r\n    mensaje:null,\r\n    cargando:true\r\n}\r\n\r\nexport const AuthReducer=(state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case REGISTRO_EXITOSO:\r\n        case LOGIN_EXITOSO:\r\n            localStorage.setItem('token',action.payload.token)\r\n            return{\r\n                ...state,\r\n                autenticado:true,\r\n                mensaje:null,\r\n                cargando:false,\r\n                token: action.payload.token\r\n            };\r\n        case REGISTRO_ERROR:\r\n        case LOGIN_ERROR:\r\n        case CERRAR_SESION:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                token:null,\r\n                mensaje: action.payload,\r\n                autenticado:null,\r\n                usuario:null,\r\n                cargando:false\r\n            }\r\n        case OBTENER_USUARIO:{\r\n            return{\r\n                ...state,\r\n                usuario:action.payload,\r\n                autenticado:true,\r\n                cargando:false\r\n            }\r\n        }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {FORMULARIO_PROYECTO,\r\n    OBTENER_PROYECTOS,\r\n    AGREGAR_PROYECTO,\r\n    VALIDAR_FORMULARIO,\r\n    PROYECTO_ACTUAL,\r\n    ELIMINAR_PROYECTO,\r\n    PROYECTO_ERROR,} from '../types'\r\n\r\nconst initialState= {\r\n    proyectos:[],\r\n    formulario:false,\r\n    errorFormulario:false,\r\n    proyecto:null,\r\n    mensaje:null\r\n}\r\n\r\nexport const ProyectosReducer =(state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case FORMULARIO_PROYECTO:\r\n            return{\r\n                ...state,\r\n                formulario:true\r\n            }\r\n        case OBTENER_PROYECTOS:\r\n            return{\r\n                ...state,\r\n                proyectos: action.payload\r\n            }\r\n        case AGREGAR_PROYECTO:\r\n            return{\r\n                ...state,\r\n                proyectos:[...state.proyectos , action.payload],\r\n                formulario:false,\r\n                errorFormulario:false   \r\n            }\r\n        case VALIDAR_FORMULARIO:\r\n            return{\r\n                ...state,\r\n                errorFormulario:true\r\n            }\r\n        case PROYECTO_ACTUAL:\r\n            return{\r\n                ...state,\r\n                proyecto: state.proyectos.filter( proyecto=> proyecto._id === action.payload )\r\n            }\r\n        case ELIMINAR_PROYECTO:\r\n            return{\r\n                ...state,\r\n                proyectos: state.proyectos.filter( proyecto=> proyecto._id !== action.payload ),\r\n                proyecto:null\r\n            }\r\n        case PROYECTO_ERROR:\r\n            return{\r\n                ...state,\r\n                mensaje: action.payload\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA,} from '../types/index'\r\n\r\nconst initialState={\r\n    tareasProyecto:[],\r\n    errorTarea:false,\r\n    tareaSeleccionada:null\r\n}\r\n\r\nexport const TareasReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case TAREAS_PROYECTO:\r\n            return{\r\n                ...state,\r\n                tareasProyecto: action.payload\r\n            }\r\n        case AGREGAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasProyecto: [action.payload , ...state.tareasProyecto ],\r\n                errorTarea:false\r\n            }\r\n        case VALIDAR_TAREA:\r\n            return{\r\n                ...state,\r\n                errorTarea:true\r\n            }\r\n        case ELIMINAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasProyecto: state.tareasProyecto.filter( tarea=> tarea._id !== action.payload )\r\n            }\r\n        case ACTUALIZAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasProyecto: state.tareasProyecto.map( tarea=> (tarea._id === action.payload._id )\r\n                    ? action.payload\r\n                    : tarea ),\r\n            }\r\n        case TAREA_ACTUAL:\r\n            return{\r\n                ...state,\r\n                tareaSeleccionada:action.payload\r\n            }\r\n        case LIMPIAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareaSeleccionada:null\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { AlertaReducer } from \"./AlertasReducer\";\r\nimport { AuthReducer } from \"./AuthReducer\";\r\nimport { ProyectosReducer } from \"./ProyectosReducer\";\r\nimport { TareasReducer } from \"./TareasReducer\";\r\n\r\n\r\nexport const reducers = combineReducers({\r\n    proyectos: ProyectosReducer,\r\n    tareas: TareasReducer,\r\n    alerta: AlertaReducer,\r\n    auth: AuthReducer\r\n})","import { createStore ,compose,applyMiddleware} from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport { reducers } from \"../Reducers\";\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n        )) ","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Switch ,Redirect} from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\nimport RutaPrivada from './components/routes/RutaPrivada';\nimport RutaPublica from './components/routes/RutaPublica';\nimport { store } from './store/store';\n\n// const token = localStorage.getItem('token')\n// if(token){\n//   tokenAuth(token)\n// }\nfunction App() {\n  return (\n    <Provider store={store} >\n      <Router basename={process.env.PUBLIC_URL} >\n        <Switch>\n            <RutaPublica exact path=\"/\" component={Login} />\n            <RutaPublica exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n            <RutaPrivada exact path=\"/proyectos\" component={Proyectos} />\n            <Redirect to='/'/>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}